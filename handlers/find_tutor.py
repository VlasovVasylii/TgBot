from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from db import execute_query
from keyboards import generate_back_button, generate_tutor_keyboard

router = Router()


@router.callback_query(F.data == "find_tutor")
async def find_tutor_handler(call: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ù–∞–π—Ç–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞'."""
    await state.clear()
    tutors = execute_query("SELECT id, name FROM tutors", fetchall=True)
    if tutors:
        await call.message.edit_text(
            "üîç –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ—Ç–∑—ã–≤—ã:",
            reply_markup=generate_tutor_keyboard(tutors)
        )
    else:
        await call.message.edit_text("‚ùå –†–µ–ø–µ—Ç–∏—Ç–æ—Ä—ã –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.", reply_markup=generate_back_button())
    await call.answer()


def register_handlers_find_tutor(dp):
    dp.include_router(router)

from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from keyboards import main_menu

router = Router()


@router.callback_query(F.data == "main_menu")
async def send_main_menu(message_or_call: Message | CallbackQuery, state: FSMContext):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    await state.clear()
    if isinstance(message_or_call, Message):
        await message_or_call.answer("üìö –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu)
    elif isinstance(message_or_call, CallbackQuery):
        await message_or_call.message.edit_text("üìö –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu)


@router.callback_query(F.data == "help")
async def help_handler(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ü–æ–º–æ—â—å'."""
    help_text = (
        "ü§ñ EduHelperBot - –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ —É—á–µ–±–µ.\n\n"
        "üìö –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
        "- üîç –ù–∞–π—Ç–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞\n"
        "- üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–Ω—è—Ç–∏–π\n"
        "- üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤: –∫–æ–º–∞–Ω–¥–∞ /generate_test\n"
        "- ü§î –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á: –∫–æ–º–∞–Ω–¥–∞ /solve_problem\n"
        "‚ÑπÔ∏è –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )
    await call.message.edit_text(help_text, reply_markup=main_menu)


def register_handlers_menu(dp):
    dp.include_router(router)
